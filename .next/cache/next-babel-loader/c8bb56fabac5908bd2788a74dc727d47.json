{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { products, semiAuth, revolver, ak, tactical, leverAction, derringer, ars, aks, boltAction, hunting, rftactical, selfdefense, rim, handAmmuni, rifleammuni } from '../json-data/products';\nlet store;\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, ADD_QUANTITY_WITH_NUMBER, RESET_CART, ADD_TO_COMPARE, REMOVE_ITEM_FROM_COMPARE } from '../actions/action-types/action-names';\nconst initialState = {\n  products: products,\n  semiAuth: semiAuth,\n  revolver: revolver,\n  ak: ak,\n  tactical: tactical,\n  leverAction: leverAction,\n  derringer: derringer,\n  ars: ars,\n  aks: aks,\n  boltAction: boltAction,\n  hunting: hunting,\n  rftactical: rftactical,\n  selfdefense: selfdefense,\n  rim: rim,\n  handAmmuni: handAmmuni,\n  rifleammuni: rifleammuni,\n  addedItems: [],\n  addedItemsToCompare: [],\n  total: 0,\n  shipping: 0\n};\n\nconst reducers = (state = initialState, action) => {\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_TO_COMPARE) {\n    let addedItemToCompare = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id);\n    addedItemToCompare.quantity = 1;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: [...state.addedItemsToCompare, addedItemToCompare]\n    });\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id) || state.semiAuth.find(item => item.id === action.id) || state.revolver.find(item => item.id === action.id) || state.ak.find(item => item.id === action.id) || state.tactical.find(item => item.id === action.id) || state.leverAction.find(item => item.id === action.id) || state.derringer.find(item => item.id === action.id) || state.ars.find(item => item.id === action.id) || state.aks.find(item => item.id === action.id) || state.boltAction.find(item => item.id === action.id) || state.hunting.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.price * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.price * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === REMOVE_ITEM_FROM_COMPARE) {\n    let new_items = state.addedItemsToCompare.filter(item => action.id !== item.id);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: new_items\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.price;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 6\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 6\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nconst initStore = (preloadedState = initialState) => {\n  return createStore(reducers, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};\n\nexport const initializeStore = preloadedState => {\n  var _store2;\n\n  let _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (true) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport const useStore = initialState => {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n};","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/store/reducers/reducers.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","products","semiAuth","revolver","ak","tactical","leverAction","derringer","ars","aks","boltAction","hunting","rftactical","selfdefense","rim","handAmmuni","rifleammuni","store","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","ADD_QUANTITY_WITH_NUMBER","RESET_CART","ADD_TO_COMPARE","REMOVE_ITEM_FROM_COMPARE","initialState","addedItems","addedItemsToCompare","total","shipping","reducers","state","action","type","addedItem","find","item","id","existed_item","quantity","price","newTotal","addedItemToCompare","qty","itemToRemove","new_items","filter","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport {\n    products, \n    semiAuth, \n    revolver, \n    ak, \n    tactical, \n    leverAction, \n    derringer,\n    ars,\n    aks,\n    boltAction,\n    hunting,\n    rftactical,\n    selfdefense,\n    rim,\n    handAmmuni,\n    rifleammuni,\n} from '../json-data/products';\n\nlet store\n\nimport { \n    ADD_TO_CART,\n    REMOVE_ITEM,\n    SUB_QUANTITY,\n    ADD_QUANTITY, \n    ADD_SHIPPING,\n    ADD_QUANTITY_WITH_NUMBER,\n    RESET_CART,\n    ADD_TO_COMPARE,\n    REMOVE_ITEM_FROM_COMPARE\n} from '../actions/action-types/action-names'\n\nconst initialState = {\n    products: products,\n    semiAuth: semiAuth,\n    revolver: revolver,\n    ak: ak,\n    tactical: tactical,\n    leverAction: leverAction,\n    derringer: derringer,\n    ars: ars,\n    aks: aks,\n    boltAction: boltAction,\n    hunting: hunting,\n    rftactical: rftactical,\n    selfdefense:selfdefense,\n    rim:rim,\n    handAmmuni:handAmmuni,\n    rifleammuni: rifleammuni,\n    addedItems:[],\n    addedItemsToCompare:[],\n    total: 0,\n    shipping: 0\n}\n\nconst reducers = (state = initialState, action) => {\n   \n    if(action.type === ADD_TO_CART){\n        let addedItem = state.products.find(item => item.id === action.id) \n        || state.semiAuth.find(item => item.id === action.id)\n        || state.revolver.find(item => item.id === action.id)\n        || state.ak.find(item => item.id === action.id)\n        || state.tactical.find(item => item.id === action.id)\n        || state.leverAction.find(item => item.id === action.id)\n        || state.derringer.find(item => item.id === action.id)\n        || state.ars.find(item => item.id === action.id)\n        || state.aks.find(item => item.id === action.id)\n        || state.boltAction.find(item => item.id === action.id)\n        || state.hunting.find(item => item.id === action.id)\n        //check if the action id exists in the addedItems\n        let existed_item = state.addedItems.find(item => action.id === item.id)\n        if(existed_item){\n            addedItem.quantity += 1 \n            return {\n                ...state,\n                total: state.total + addedItem.price \n            }\n        } else {\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.price \n            \n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n            \n        }\n    }\n\n    if(action.type === ADD_TO_COMPARE){\n        let addedItemToCompare = state.products.find(item => item.id === action.id)\n        || state.semiAuth.find(item => item.id === action.id)\n        || state.revolver.find(item => item.id === action.id)\n        || state.ak.find(item => item.id === action.id)\n        || state.tactical.find(item => item.id === action.id)\n        || state.leverAction.find(item => item.id === action.id)\n        || state.derringer.find(item => item.id === action.id)\n        || state.ars.find(item => item.id === action.id)\n        || state.aks.find(item => item.id === action.id)\n        || state.boltAction.find(item => item.id === action.id)\n        || state.hunting.find(item => item.id === action.id)\n        \n        addedItemToCompare.quantity = 1;\n        \n        return {\n            ...state,\n            addedItemsToCompare: [...state.addedItemsToCompare, addedItemToCompare]\n        }\n    }\n\n    if(action.type === ADD_QUANTITY_WITH_NUMBER){\n        let addedItem = state.products.find(item => item.id === action.id)\n        || state.semiAuth.find(item => item.id === action.id)\n        || state.revolver.find(item => item.id === action.id)\n        || state.ak.find(item => item.id === action.id)\n        || state.tactical.find(item => item.id === action.id)\n        || state.leverAction.find(item => item.id === action.id)\n        || state.derringer.find(item => item.id === action.id)\n        || state.ars.find(item => item.id === action.id)\n        || state.aks.find(item => item.id === action.id)\n        || state.boltAction.find(item => item.id === action.id)\n        || state.hunting.find(item => item.id === action.id)\n        //check if the action id exists in the addedItems\n        let existed_item = state.addedItems.find(item=> action.id === item.id)\n        if(existed_item)\n        {\n            addedItem.quantity += action.qty\n            return {\n                ...state,\n                total: state.total + addedItem.price * action.qty\n            }\n        } else {\n            addedItem.quantity = action.qty;\n            //calculating the total\n            let newTotal = state.total + addedItem.price * action.qty\n            \n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n            \n        }\n    }\n\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove = state.addedItems.find(item=> action.id === item.id)\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\n        \n        //calculating the total\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity );\n\n        return {\n            ...state,\n            addedItems: new_items,\n            total: newTotal\n        }\n    }\n\n    if(action.type === REMOVE_ITEM_FROM_COMPARE){\n        let new_items = state.addedItemsToCompare.filter(item=> action.id !== item.id)\n        \n        return {\n            ...state,\n            addedItemsToCompare: new_items\n        }\n    }\n\n    if(action.type === ADD_QUANTITY){\n        let addedItem = state.products.find(item=> item.id === action.id)\n        addedItem.quantity += 1 \n        let newTotal = state.total + addedItem.price\n        return {\n            ...state,\n            total: newTotal\n        }\n    }\n\n    if(action.type === SUB_QUANTITY){  \n        let addedItem = state.products.find(item=> item.id === action.id) \n        //if the qt == 0 then it should be removed\n        if(addedItem.quantity === 1){\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\n            let newTotal = state.total - addedItem.price\n            return {\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n            }\n        } else {\n            addedItem.quantity -= 1\n            let newTotal = state.total - addedItem.price\n            return {\n                ...state,\n                total: newTotal\n            }\n        }\n        \n    }\n\n    if(action.type === ADD_SHIPPING){\n        return {\n            ...state,\n            shipping: state.shipping += 6\n        }\n    }\n\n    if(action.type === 'SUB_SHIPPING'){\n        return {\n            ...state,\n            shipping: state.shipping -= 6\n        }\n    }\n\n    if(action.type === RESET_CART){\n        return {\n            ...state,\n            addedItems: [],\n            total: 0,\n            shipping: 0\n        }\n    }\n    \n    else {\n        return state\n    }\n}\n\nconst initStore = (preloadedState = initialState) => {\n    return createStore(\n        reducers,\n        preloadedState,\n        composeWithDevTools(applyMiddleware(thunkMiddleware))\n    )\n}\n\nexport const initializeStore = (preloadedState) => {\n    let _store = store ?? initStore(preloadedState)\n  \n    // After navigating to a page with an initial Redux state, merge that state\n    // with the current state in the store, and create a new store\n    if (preloadedState && store) {\n        _store = initStore({\n            ...store.getState(),\n            ...preloadedState,\n        })\n        // Reset the current store\n        store = undefined\n    }\n  \n    // For SSG and SSR always create a new store\n    if (typeof window === 'undefined') return _store\n    // Create the store once in the client\n    if (!store) store = _store\n  \n    return _store\n}\n\nexport const useStore = (initialState) => {\n    const store = useMemo(() => initializeStore(initialState), [initialState])\n    return store\n}\n  "]},"metadata":{},"sourceType":"module"}