{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Router from 'next/router';\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport useForm from \"./userForm\"; // get our fontawesome imports\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\nimport { toast } from 'react-toastify';\nimport { resetCart } from '../../store/actions/actions';\n\nfunction CheckoutForm({\n  total,\n  shipping\n}) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    resetCart();\n    return axios.get(`https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&name=${state.firstName.value}`).then(res => {\n      console.log(res.data);\n      redirect(res.data);\n\n      if (window.closed) {\n        clearInterval(timer);\n        alert('closed');\n      }\n\n      ;\n      toast.success('Order has been received, Please make payment in the new window', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      setTimeout(function () {\n        Router.push('/thankyou');\n      }, 5000);\n    });\n  }\n\n  function redirect(url) {\n    if (url) return window.open(url, \"_blank\", \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=700\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n  const stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\"\n      }\n    },\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\"\n      }\n    },\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\"\n      }\n    },\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\"\n      }\n    },\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\"\n      }\n    },\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\"\n      }\n    }\n  };\n  const {\n    state,\n    handleOnChange,\n    disable\n  } = useForm(stateSchema, validationStateSchema);\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  })), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error)))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"Card Services Are Temporarily Disabled In Your Region, Please Use the Available Payment Method Below\"), __jsx(\"div\", {\n    style: {\n      color: \"green\"\n    }\n  }, \"Payment button only works when all fields in the form marked with \", __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"*\"), \" are filled\")), __jsx(\"br\", null), __jsx(\"button\", {\n    style: {\n      color: \"gold\",\n      borderRadius: \"10%\"\n    },\n    type: \"submit\",\n    disabled: disable,\n    className: `btn btn-success`\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBitcoin,\n    size: \"lg\",\n    spin: true\n  }), \" Pay\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/CheckoutForm.js"],"names":["React","axios","Router","Link","connect","OrderSummary","useForm","FontAwesomeIcon","faBitcoin","toast","resetCart","CheckoutForm","total","shipping","handleOnSubmit","e","preventDefault","get","totalAmount","state","firstName","value","then","res","console","log","data","redirect","window","closed","clearInterval","timer","alert","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setTimeout","push","url","open","toFixed","stateSchema","error","lastName","address","city","zip","email","phone","validationStateSchema","required","validator","regEx","handleOnChange","disable","errorStyle","color","fontSize","borderRadius","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport Router from 'next/router'\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport useForm from \"./userForm\";\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBitcoin } from \"@fortawesome/free-brands-svg-icons\";\n\nimport { toast } from 'react-toastify';\nimport { resetCart } from '../../store/actions/actions';\n\nfunction CheckoutForm({ total, shipping, }) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    resetCart(); \n    return axios\n      .get(\n        `https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&name=${state.firstName.value}`\n      )\n      .then((res) => {\n        console.log(res.data);\n        redirect(res.data);\n        if(window.closed) {\n          clearInterval(timer);\n          alert('closed');\n      };\n        toast.success('Order has been received, Please make payment in the new window', {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        });\n        setTimeout(function(){ Router.push('/thankyou'); }, 5000);\n      });\n  }\n\n  function redirect(url) {\n    if (url) return window.open(url, \"_blank\", \"toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=700\");\n    \n   \n \n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n\n  const stateSchema = {\n    firstName: { value: \"\", error: \"\" },\n    lastName: { value: \"\", error: \"\" },\n    address: { value: \"\", error: \"\" },\n    city: { value: \"\", error: \"\" },\n    state: { value: \"\", error: \"\" },\n    zip: { value: \"\", error: \"\" },\n    email: { value: \"\", error: \"\" },\n    phone: { value: \"\", error: \"\" },\n  };\n\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\",\n      },\n    },\n\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\",\n      },\n    },\n\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\",\n      },\n    },\n\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\",\n      },\n    },\n\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\",\n      },\n    },\n  };\n\n  const { state, handleOnChange, disable } = useForm(\n    stateSchema,\n    validationStateSchema\n  );\n\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\",\n  };\n\n  return (\n    <section className=\"checkout-area ptb-60\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\"></div>\n        </div>\n\n        <form onSubmit={handleOnSubmit}>\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"billing-details\">\n                <h3 className=\"title\">Billing Details</h3>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        First Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.firstName.value}\n                      />\n                      {state.firstName.error && (\n                        <p style={errorStyle}>{state.firstName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Last Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.lastName.value}\n                      />\n                      {state.lastName.error && (\n                        <p style={errorStyle}>{state.lastName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.address.value}\n                      />\n                      {state.address.error && (\n                        <p style={errorStyle}>{state.address.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Town / City <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.city.value}\n                      />\n                      {state.city.error && (\n                        <p style={errorStyle}>{state.city.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        State / County <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.state.value}\n                      />\n                      {state.state.error && (\n                        <p style={errorStyle}>{state.state.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Postcode / Zip <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.zip.value}\n                      />\n                      {state.zip.error && (\n                        <p style={errorStyle}>{state.zip.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Email Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.email.value}\n                      />\n                      {state.email.error && (\n                        <p style={errorStyle}>{state.email.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Phone <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.phone.value}\n                      />\n                      {state.phone.error && (\n                        <p style={errorStyle}>{state.phone.error}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"order-details\">\n                <h3 className=\"title\">Your Order</h3>\n\n                <OrderSummary />\n                <br />\n                <div style={{ color: \"red\" }}>\n                  Card Services Are Temporarily Disabled In Your Region, Please Use\n                  the Available Payment Method Below\n                </div>\n                <div style={{ color: \"green\" }}>\n                  Payment button only works when all fields in the form marked\n                  with <span style={{ color: \"red\" }}>*</span> are filled \n                </div>\n              </div>\n              <br />\n              \n\n              <button\n                style={{ color: \"gold\", borderRadius: \"10%\" }}\n                type=\"submit\"\n                disabled={disable}\n                className={`btn btn-success`}\n              >\n                   <FontAwesomeIcon icon={faBitcoin} size=\"lg\" spin/> Pay\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    total: state.total,\n    shipping: state.shipping,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}