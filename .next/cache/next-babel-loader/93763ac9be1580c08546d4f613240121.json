{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP eliteworkstation\\\\Desktop\\\\lambo\\\\novine-react\\\\components\\\\payments\\\\Payment2.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/actions\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", () => {\n      this.props.resetCart();\n      toast.success(\"Order has been confirmed\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      setTimeout(function () {\n        Router.push(\"/thankyou\");\n      }, 3000);\n    });\n  }\n\n  render() {\n    let {\n      amount\n    } = this.props;\n\n    const checkoutId = async checkoutId => {\n      const body = {\n        amount: amount\n      };\n      await axios.post(\"/api/checkout\", body);\n    };\n\n    console.log(checkoutId);\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"order-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, console.log(checkoutId), __jsx(CoinbaseCommerceButton, {\n      wrapperStyle: {\n        width: \"100%\"\n      },\n      style: {\n        width: \"100%\",\n        color: \"green\",\n        borderColor: \"green\",\n        borderRadius: 4,\n        height: 45,\n        cursor: \"pointer\"\n      },\n      checkoutId: checkoutId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Custom Styles Button\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetCart: () => {\n      dispatch(resetCart());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Payments);","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/payments/Payment2.js"],"names":["React","axios","Router","StripeCheckout","connect","toast","resetCart","CoinbaseCommerceButton","Payments","Component","props","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setTimeout","push","render","amount","checkoutId","body","post","console","log","width","color","borderColor","borderRadius","height","cursor","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,sBAAP,MAAmC,yBAAnC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;;AAAA,yCACvB,MAAM;AAClB,WAAKC,KAAL,CAAWJ,SAAX;AACAD,MAAAA,KAAK,CAACM,OAAN,CAAc,0BAAd,EAA0C;AACxCC,QAAAA,QAAQ,EAAE,YAD8B;AAExCC,QAAAA,SAAS,EAAE,IAF6B;AAGxCC,QAAAA,eAAe,EAAE,KAHuB;AAIxCC,QAAAA,YAAY,EAAE,IAJ0B;AAKxCC,QAAAA,YAAY,EAAE,IAL0B;AAMxCC,QAAAA,SAAS,EAAE;AAN6B,OAA1C;AASAC,MAAAA,UAAU,CAAC,YAAY;AACrBhB,QAAAA,MAAM,CAACiB,IAAP,CAAY,WAAZ;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAfoC;AAAA;;AAgBrCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAa,KAAKX,KAAtB;;AACA,UAAMY,UAAU,GAAG,MAAOA,UAAP,IAAsB;AACvC,YAAMC,IAAI,GAAG;AACXF,QAAAA,MAAM,EAAEA;AADG,OAAb;AAGA,YAAMpB,KAAK,CAACuB,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAN;AACD,KALD;;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,OAAO,CAACC,GAAR,CAAYJ,UAAZ,CADL,EAEE,MAAC,sBAAD;AACE,MAAA,YAAY,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OADhB;AAEE,MAAA,KAAK,EAAE;AACLA,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,WAAW,EAAE,OAHR;AAILC,QAAAA,YAAY,EAAE,CAJT;AAKLC,QAAAA,MAAM,EAAE,EALH;AAMLC,QAAAA,MAAM,EAAE;AANH,OAFT;AAUE,MAAA,UAAU,EAAEV,UAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,CADF,CADF;AAqBD;;AA/CoC;;AAkDvC,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL5B,IAAAA,SAAS,EAAE,MAAM;AACf4B,MAAAA,QAAQ,CAAC5B,SAAS,EAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCzB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { resetCart } from \"../../store/actions/actions\";\n\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nclass Payments extends React.Component {\n  handleClick = () => {\n    this.props.resetCart();\n    toast.success(\"Order has been confirmed\", {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n    setTimeout(function () {\n      Router.push(\"/thankyou\");\n    }, 3000);\n  };\n  render() {\n    let { amount } = this.props;\n    const checkoutId = async (checkoutId) => {\n      const body = {\n        amount: amount,\n      };\n      await axios.post(\"/api/checkout\", body);\n    };\n\n    console.log(checkoutId);\n    return (\n      <React.Fragment>\n        <div className=\"order-btn\">\n            {console.log(checkoutId)}\n          <CoinbaseCommerceButton\n            wrapperStyle={{ width: \"100%\" }}\n            style={{\n              width: \"100%\",\n              color: \"green\",\n              borderColor: \"green\",\n              borderRadius: 4,\n              height: 45,\n              cursor: \"pointer\",\n            }}\n            checkoutId={checkoutId}\n          >\n            Custom Styles Button\n          </CoinbaseCommerceButton>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetCart: () => {\n      dispatch(resetCart());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Payments);\n"]},"metadata":{},"sourceType":"module"}