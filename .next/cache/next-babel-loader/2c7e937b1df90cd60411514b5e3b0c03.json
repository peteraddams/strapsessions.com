{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\"; // npm install --save-dev @iconify/react @iconify-icons/mdi\n\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport bitcoinIcon from \"@iconify-icons/mdi/bitcoin\";\n\nfunction CheckoutForm({\n  total,\n  shipping\n}) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    return axios.get(`https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&name=${state.firstName.value}`).then(res => {\n      console.log(res.data);\n      redirect(res.data);\n    });\n  }\n\n  function redirect(url) {\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n  const stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\"\n      }\n    },\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\"\n      }\n    },\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\"\n      }\n    },\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\"\n      }\n    },\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\"\n      }\n    },\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\"\n      }\n    }\n  };\n  const {\n    state,\n    handleOnChange,\n    disable\n  } = useForm(stateSchema, validationStateSchema);\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  })), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error)))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      color: \"red\",\n      borderRadius: \"50%\"\n    }\n  }, \"Card Services Temporarily Disabled In Your Region, Please Use the Available Payment Method Below\")), __jsx(\"br\", null), __jsx(\"button\", {\n    style: {\n      color: \"gold\"\n    },\n    type: \"submit\",\n    disabled: disable,\n    className: `btn btn-secondary`\n  }, __jsx(Icon, {\n    icon: bitcoinIcon,\n    height: \"30\"\n  }), \" Pay\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/CheckoutForm.js"],"names":["React","axios","Link","connect","OrderSummary","Payment","useForm","CoinbaseCommerceButton","Icon","InlineIcon","bitcoinIcon","CheckoutForm","total","shipping","handleOnSubmit","e","preventDefault","get","totalAmount","state","firstName","value","then","res","console","log","data","redirect","url","window","open","toFixed","stateSchema","error","lastName","address","city","zip","email","phone","validationStateSchema","required","validator","regEx","handleOnChange","disable","errorStyle","color","fontSize","borderRadius","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n// npm install --save-dev @iconify/react @iconify-icons/mdi\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport bitcoinIcon from \"@iconify-icons/mdi/bitcoin\";\n\nfunction CheckoutForm({ total, shipping }) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n\n    return axios\n      .get(\n        `https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&name=${state.firstName.value}`\n      )\n      .then((res) => {\n        console.log(res.data);\n        redirect(res.data);\n      });\n  }\n\n  function redirect(url) {\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n\n  const stateSchema = {\n    firstName: { value: \"\", error: \"\" },\n    lastName: { value: \"\", error: \"\" },\n    address: { value: \"\", error: \"\" },\n    city: { value: \"\", error: \"\" },\n    state: { value: \"\", error: \"\" },\n    zip: { value: \"\", error: \"\" },\n    email: { value: \"\", error: \"\" },\n    phone: { value: \"\", error: \"\" },\n  };\n\n  const validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\",\n      },\n    },\n\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\",\n      },\n    },\n\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\",\n      },\n    },\n\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\",\n      },\n    },\n\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\",\n      },\n    },\n\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\",\n      },\n    },\n  };\n\n  const { state, handleOnChange, disable } = useForm(\n    stateSchema,\n    validationStateSchema\n  );\n\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\",\n  };\n\n  return (\n    <section className=\"checkout-area ptb-60\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\"></div>\n        </div>\n\n        <form onSubmit={handleOnSubmit}>\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"billing-details\">\n                <h3 className=\"title\">Billing Details</h3>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        First Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.firstName.value}\n                      />\n                      {state.firstName.error && (\n                        <p style={errorStyle}>{state.firstName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Last Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.lastName.value}\n                      />\n                      {state.lastName.error && (\n                        <p style={errorStyle}>{state.lastName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.address.value}\n                      />\n                      {state.address.error && (\n                        <p style={errorStyle}>{state.address.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Town / City <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.city.value}\n                      />\n                      {state.city.error && (\n                        <p style={errorStyle}>{state.city.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        State / County <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.state.value}\n                      />\n                      {state.state.error && (\n                        <p style={errorStyle}>{state.state.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Postcode / Zip <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.zip.value}\n                      />\n                      {state.zip.error && (\n                        <p style={errorStyle}>{state.zip.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Email Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.email.value}\n                      />\n                      {state.email.error && (\n                        <p style={errorStyle}>{state.email.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Phone <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.phone.value}\n                      />\n                      {state.phone.error && (\n                        <p style={errorStyle}>{state.phone.error}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"order-details\">\n                <h3 className=\"title\">Your Order</h3>\n\n                <OrderSummary />\n                <br/>\n                <div style={{color: \"red\", borderRadius: \"50%\"}}>\n                    Card Services Temporarily Disabled In Your Region, Please Use the Available Payment Method Below\n                </div>\n              </div>\n              <br/>\n\n              <button\n               style={{color: \"gold\"}}\n                type=\"submit\"\n                disabled={disable}\n                className={`btn btn-secondary`}\n              >\n\n                <Icon icon={bitcoinIcon} height=\"30\" /> Pay\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    total: state.total,\n    shipping: state.shipping,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}