{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS, INLINES } from \"@contentful/rich-text-types\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    width: \"3em\",\n    height: \"3em\",\n    boxShadow: \"0px 0px 10px 1px #b2b2b28f\"\n  },\n  root: {\n    maxWidth: \"800px\"\n  },\n  blogBody: {\n    marginTop: \"2rem\",\n    \"& p\": _objectSpread({}, theme.typography.body1),\n    \"& h1, h2, h3, h4, h5\": {\n      fontSize: \"1.5rem\",\n      marginBottom: \"0\",\n      marginTop: \"2rem\"\n    },\n    \"& a\": {\n      color: theme.palette.info.main\n    }\n  }\n}));\n\nconst BlogBody = ({\n  content\n}) => {\n  const classes = useStyles();\n  const options = {\n    renderNode: {\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        const {\n          url,\n          fileName\n        } = node.data.target.fields.file;\n        return __jsx(\"img\", {\n          src: url,\n          alt: fileName,\n          style: {\n            height: \"auto\",\n            width: \"100%\",\n            margin: \"1em 0\"\n          }\n        });\n      },\n      [INLINES.HYPERLINK]: node => {\n        const {\n          uri\n        } = node.data;\n        const {\n          value\n        } = node.content[0];\n        return __jsx(\"a\", {\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          href: uri\n        }, value);\n      }\n    }\n  };\n  return __jsx(Container, {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.blogBody\n  }, documentToReactComponents(content, options))));\n};\n\nexport default BlogBody;","map":null,"metadata":{},"sourceType":"module"}