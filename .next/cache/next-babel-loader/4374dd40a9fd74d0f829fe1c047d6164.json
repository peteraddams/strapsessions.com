{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP eliteworkstation\\\\Desktop\\\\lambo\\\\novine-react\\\\components\\\\checkout\\\\OrderSummary.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\n\nvar OrderSummary = /*#__PURE__*/function (_Component) {\n  _inherits(OrderSummary, _Component);\n\n  var _super = _createSuper(OrderSummary);\n\n  function OrderSummary() {\n    _classCallCheck(this, OrderSummary);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OrderSummary, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        className: \"order-table table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }\n      }, __jsx(\"table\", {\n        className: \"table table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 29\n        }\n      }, \"Product Name\"), __jsx(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }\n      }, \"Total\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, this.props.products.map(function (data, idx) {\n        return __jsx(\"tr\", {\n          key: idx,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }\n        }, __jsx(\"td\", {\n          className: \"product-name\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }\n        }, __jsx(Link, {\n          href: \"#\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 37\n          }\n        }, __jsx(\"a\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 41\n          }\n        }, data.title))), __jsx(\"td\", {\n          className: \"product-total\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }\n        }, __jsx(\"span\", {\n          className: \"subtotal-amount\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }\n        }, \"$\", data.price * data.quantity)));\n      }), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        className: \"order-subtotal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, \"Cart Subtotal\")), __jsx(\"td\", {\n        className: \"order-subtotal-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        className: \"order-subtotal-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }, \"$\", this.props.total))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        className: \"order-shipping\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, \"Shipping\")), __jsx(\"td\", {\n        className: \"shipping-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, \"$\", this.props.shipping))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, __jsx(\"td\", {\n        className: \"total-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, \"Order Total\")), __jsx(\"td\", {\n        className: \"product-subtotal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, __jsx(\"span\", {\n        className: \"subtotal-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, \"$\", this.props.total + this.props.shipping))))));\n    }\n  }]);\n\n  return OrderSummary;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(OrderSummary);","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/OrderSummary.js"],"names":["React","Component","connect","Link","OrderSummary","props","products","map","data","idx","title","price","quantity","total","shipping","mapStateToProps","state","addedItems"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,Y;;;;;;;;;;;;;6BACO;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAOC,GAAP;AAAA,eACrB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,KAAT,CADJ,CADJ,CADJ,EAOI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoCF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACI,QAAtD,CADJ,CAPJ,CADqB;AAAA,OAAxB,CADL,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAKI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0C,KAAKP,KAAL,CAAWQ,KAArD,CADJ,CALJ,CAfJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAKI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ,KAAKR,KAAL,CAAWS,QAAnB,CADJ,CALJ,CAzBJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAKI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAoC,KAAKT,KAAL,CAAWQ,KAAX,GAAmB,KAAKR,KAAL,CAAWS,QAAlE,CADJ,CALJ,CAnCJ,CARJ,CADJ,CADJ;AA0DH;;;;EA5DsBb,S;;AA+D3B,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHV,IAAAA,QAAQ,EAAEU,KAAK,CAACC,UADb;AAEHJ,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAFV;AAGHC,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AAHb,GAAP;AAKH,CAND;;AAQA,eAAeZ,OAAO,CAClBa,eADkB,CAAP,CAEbX,YAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\n\nclass OrderSummary extends Component {\n    render() {\n        return (\n            <div className=\"order-table table-responsive\">\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Product Name</th>\n                            <th scope=\"col\">Total</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {this.props.products.map((data, idx) => (\n                            <tr key={idx}>\n                                <td className=\"product-name\">\n                                    <Link href=\"#\">\n                                        <a>{data.title}</a>\n                                    </Link>\n                                </td>\n\n                                <td className=\"product-total\">\n                                    <span className=\"subtotal-amount\">${data.price * data.quantity}</span>\n                                </td>\n                            </tr>\n                        ))}\n\n                        <tr>\n                            <td className=\"order-subtotal\">\n                                <span>Cart Subtotal</span>\n                            </td>\n\n                            <td className=\"order-subtotal-price\">\n                                <span className=\"order-subtotal-amount\">${this.props.total}</span>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td className=\"order-shipping\">\n                                <span>Shipping</span>\n                            </td>\n\n                            <td className=\"shipping-price\">\n                                <span>${this.props.shipping}</span>\n                            </td>\n                        </tr>\n                        \n                        <tr>\n                            <td className=\"total-price\">\n                                <span>Order Total</span>\n                            </td>\n\n                            <td className=\"product-subtotal\">\n                                <span className=\"subtotal-amount\">${this.props.total + this.props.shipping}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.addedItems,\n        total: state.total,\n        shipping: state.shipping\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(OrderSummary)\n"]},"metadata":{},"sourceType":"module"}