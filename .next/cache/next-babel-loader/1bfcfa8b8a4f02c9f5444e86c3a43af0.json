{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport QuickView from '../Modal/QuickView';\nimport AddToCart from '../Shared/AddToCart';\nimport AddToCompare from '../Shared/AddToCompare';\n\nclass ProductsCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modalOpen: false,\n      modalData: null\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        modalOpen: false\n      });\n    });\n\n    _defineProperty(this, \"compareButton\", id => {\n      let compare_exist = this.props.CompareProducts.filter(item => item.id === id);\n\n      if (compare_exist.length > 0) {\n        return __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", {\n          \"data-tip\": \"Already Added\",\n          \"data-place\": \"left\",\n          onClick: e => {\n            e.preventDefault();\n          },\n          disabled: true,\n          className: \"disabled\"\n        }, __jsx(\"i\", {\n          className: \"fas fa-sync\"\n        })));\n      } else {\n        return __jsx(AddToCompare, {\n          id: id\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleModalData\", data => {\n      this.setState({\n        modalData: data\n      });\n    });\n  }\n\n  render() {\n    let {\n      products\n    } = this.props;\n    const {\n      modalOpen\n    } = this.state;\n    return __jsx(React.Fragment, null, products.map((data, idx) => __jsx(\"div\", {\n      className: \"col-lg-4 col-sm-6 col-md-4 col-6 products-col-item\",\n      key: idx\n    }, __jsx(\"div\", {\n      className: \"single-product-box\"\n    }, __jsx(\"div\", {\n      className: \"product-image\"\n    }, __jsx(Link, {\n      href: \"/product/[id]\",\n      as: `/product/${data.id}`\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: data.image,\n      alt: \"image\"\n    }), __jsx(\"img\", {\n      src: data.imageHover,\n      alt: \"image\"\n    }))), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      \"data-tip\": \"Quick View\",\n      \"data-place\": \"left\",\n      onClick: e => {\n        e.preventDefault();\n        this.openModal();\n        this.handleModalData(data);\n      }\n    }, __jsx(\"i\", {\n      className: \"far fa-eye\"\n    })))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      \"data-tip\": \"Add to Wishlist\",\n      \"data-place\": \"left\"\n    }, __jsx(\"i\", {\n      className: \"far fa-heart\"\n    })))), __jsx(\"li\", null, this.compareButton(data.id)))), __jsx(\"div\", {\n      className: \"product-content\"\n    }, __jsx(\"h3\", null, __jsx(Link, {\n      href: \"/product/[id]\",\n      as: `/product/${data.id}`\n    }, __jsx(\"a\", null, data.title))), __jsx(\"div\", {\n      className: \"product-price\"\n    }, __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", data.price)), __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"fas fa-star\"\n    }), __jsx(\"i\", {\n      className: \"far fa-star\"\n    })), __jsx(AddToCart, data))))), modalOpen ? __jsx(QuickView, {\n      closeModal: this.closeModal,\n      modalData: this.state.modalData\n    }) : '');\n  }\n\n}\n\nexport default ProductsCard;","map":null,"metadata":{},"sourceType":"module"}