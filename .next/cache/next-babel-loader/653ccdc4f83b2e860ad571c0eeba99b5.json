{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nfunction CheckoutForm(_ref) {\n  var total = _ref.total,\n      shipping = _ref.shipping;\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    alert(totalAmount);\n    return axios.get(\"https://coinbase-backend.herokuapp.com/checkout?total=\".concat(totalAmount, \"&count=6\")).then(function (res) {\n      console.log(res.data);\n      redirect(res.data);\n    });\n  }\n\n  function redirect(url) {\n    alert(url);\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  var totalAmount = (total + shipping).toFixed(2);\n  var stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  var errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  })), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Country \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"div\", {\n    className: \"select-box\"\n  }, __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\"\n  }, __jsx(\"option\", {\n    value: \"5\"\n  }, \"United Arab Emirates\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \"China\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \"United Kingdom\"), __jsx(\"option\", {\n    value: \"0\"\n  }, \"Germany\"), __jsx(\"option\", {\n    value: \"3\"\n  }, \"France\"), __jsx(\"option\", {\n    value: \"4\"\n  }, \"Japan\"))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Company Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\"\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"textarea\", {\n    name: \"notes\",\n    id: \"notes\",\n    cols: \"30\",\n    rows: \"6\",\n    placeholder: \"Order Notes\",\n    className: \"form-control\"\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(CoinbaseCommerceButton, {\n    checkoutId: \"30934862-d980-46cb-9402-43c81b0cabd5\"\n  }), __jsx(Payment, {\n    amount: totalAmount * 100,\n    disabled: disable\n  })))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\"\n  }))), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\")), __jsx(\"a\", {\n    href: \"#\",\n    onClick: handleOnSubmit\n  }, \"Click me\")));\n}\n\n_c = CheckoutForm;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/CheckoutForm.js"],"names":["React","axios","Link","connect","OrderSummary","Payment","useForm","CoinbaseCommerceButton","CheckoutForm","total","shipping","handleOnSubmit","e","preventDefault","alert","totalAmount","get","then","res","console","log","data","redirect","url","window","open","toFixed","stateSchema","firstName","value","error","lastName","address","city","state","zip","email","phone","errorStyle","color","fontSize","handleOnChange","disable","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nfunction CheckoutForm({ total, shipping }) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    alert(totalAmount);\n    return axios\n      .get(\n        `https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&count=6`\n      )\n      .then((res) => {\n        console.log(res.data);\n        redirect(res.data);\n      });\n  }\n\n  function redirect(url) {\n    alert(url);\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n\n  const stateSchema = {\n    firstName: { value: \"\", error: \"\" },\n    lastName: { value: \"\", error: \"\" },\n    address: { value: \"\", error: \"\" },\n    city: { value: \"\", error: \"\" },\n    state: { value: \"\", error: \"\" },\n    zip: { value: \"\", error: \"\" },\n    email: { value: \"\", error: \"\" },\n    phone: { value: \"\", error: \"\" },\n  };\n\n  const errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\",\n  };\n\n  return (\n    <section className=\"checkout-area ptb-60\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\"></div>\n        </div>\n\n        <form onSubmit={handleOnSubmit}>\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"billing-details\">\n                <h3 className=\"title\">Billing Details</h3>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group\">\n                      <label>\n                        Country <span className=\"required\">*</span>\n                      </label>\n                      <div className=\"select-box\">\n                        <select className=\"form-control\" name=\"country\">\n                          <option value=\"5\">United Arab Emirates</option>\n                          <option value=\"1\">China</option>\n                          <option value=\"2\">United Kingdom</option>\n                          <option value=\"0\">Germany</option>\n                          <option value=\"3\">France</option>\n                          <option value=\"4\">Japan</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        First Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.firstName.value}\n                      />\n                      {state.firstName.error && (\n                        <p style={errorStyle}>{state.firstName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Last Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.lastName.value}\n                      />\n                      {state.lastName.error && (\n                        <p style={errorStyle}>{state.lastName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group\">\n                      <label>Company Name</label>\n                      <input type=\"text\" className=\"form-control\" />\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.address.value}\n                      />\n                      {state.address.error && (\n                        <p style={errorStyle}>{state.address.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Town / City <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.city.value}\n                      />\n                      {state.city.error && (\n                        <p style={errorStyle}>{state.city.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        State / County <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.state.value}\n                      />\n                      {state.state.error && (\n                        <p style={errorStyle}>{state.state.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Postcode / Zip <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.zip.value}\n                      />\n                      {state.zip.error && (\n                        <p style={errorStyle}>{state.zip.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Email Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.email.value}\n                      />\n                      {state.email.error && (\n                        <p style={errorStyle}>{state.email.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Phone <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.phone.value}\n                      />\n                      {state.phone.error && (\n                        <p style={errorStyle}>{state.phone.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                 \n                  \n\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group\">\n                      <textarea\n                        name=\"notes\"\n                        id=\"notes\"\n                        cols=\"30\"\n                        rows=\"6\"\n                        placeholder=\"Order Notes\"\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"order-details\">\n                <h3 className=\"title\">Your Order</h3>\n\n                <OrderSummary />\n\n                \n                <CoinbaseCommerceButton\n                  checkoutId={\"30934862-d980-46cb-9402-43c81b0cabd5\"}\n                />\n                <Payment amount={totalAmount * 100} disabled={disable} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6 col-md-6\">\n            <div className=\"form-group\">\n              <label>Email Address </label>\n              <input type=\"email\" name=\"email\" className=\"form-control\" />\n            </div>\n          </div>\n\n          <button type=\"submit\">Submit</button>\n        </form>\n        <a href=\"#\" onClick={handleOnSubmit}>\n          Click me\n        </a>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    total: state.total,\n    shipping: state.shipping,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}