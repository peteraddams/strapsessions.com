{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from \"next/link\";\nimport { connect } from 'react-redux';\nimport { removeItem as _removeItem, addQuantity as _addQuantity, subtractQuantity as _subtractQuantity } from '../../store/actions/actions';\nimport { toast } from 'react-toastify';\n\nvar CartProduct = /*#__PURE__*/function (_Component) {\n  _inherits(CartProduct, _Component);\n\n  var _super = _createSuper(CartProduct);\n\n  function CartProduct() {\n    var _this;\n\n    _classCallCheck(this, CartProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemove\", function (id) {\n      _this.props.removeItem(id);\n\n      toast.error('Removed from cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddQuantity\", function (id) {\n      _this.props.addQuantity(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubtractQuantity\", function (id) {\n      _this.props.subtractQuantity(id);\n    });\n\n    return _this;\n  }\n\n  _createClass(CartProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cartItems = this.props.products.length ? this.props.products.map(function (data, idx) {\n        return __jsx(\"tr\", {\n          key: idx\n        }, __jsx(\"td\", {\n          className: \"product-thumbnail\"\n        }, __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", null, __jsx(\"img\", {\n          src: data.image,\n          alt: \"item\"\n        })))), __jsx(\"td\", {\n          className: \"product-name\"\n        }, __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", null, data.title)), __jsx(\"ul\", null, __jsx(\"li\", null, \"Color: \", __jsx(\"strong\", null, \"Light Blue\")), __jsx(\"li\", null, \"Size: \", __jsx(\"strong\", null, \"XL\")), __jsx(\"li\", null, \"Material: \", __jsx(\"strong\", null, \"Cotton\")))), __jsx(\"td\", {\n          className: \"product-price\"\n        }, __jsx(\"span\", {\n          className: \"unit-amount\"\n        }, \"$\", data.price)), __jsx(\"td\", {\n          className: \"product-quantity\"\n        }, __jsx(\"div\", {\n          className: \"input-counter\"\n        }, __jsx(\"span\", {\n          className: \"minus-btn\",\n          onClick: function onClick() {\n            _this2.handleSubtractQuantity(data.id);\n          }\n        }, __jsx(\"i\", {\n          className: \"fas fa-minus\"\n        })), __jsx(\"input\", {\n          type: \"text\",\n          value: data.quantity,\n          min: \"1\",\n          max: 10,\n          readOnly: true,\n          onChange: function onChange(e) {\n            return e;\n          }\n        }), __jsx(\"span\", {\n          className: \"plus-btn\",\n          onClick: function onClick() {\n            _this2.handleAddQuantity(data.id);\n          }\n        }, __jsx(\"i\", {\n          className: \"fas fa-plus\"\n        })))), __jsx(\"td\", {\n          className: \"product-subtotal\"\n        }, __jsx(\"span\", {\n          className: \"subtotal-amount\"\n        }, \"$\", data.price * data.quantity), __jsx(Link, {\n          href: \"#\"\n        }, __jsx(\"a\", {\n          className: \"remove\",\n          onClick: function onClick(e) {\n            e.preventDefault();\n\n            _this2.handleRemove(data.id);\n          }\n        }, __jsx(\"i\", {\n          className: \"far fa-trash-alt\"\n        })))));\n      }) : __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"product-thumbnail\",\n        colspan: \"5\"\n      }, __jsx(\"p\", null, \"Empty.\")));\n      return __jsx(React.Fragment, null, __jsx(\"table\", {\n        className: \"table table-bordered\"\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n        scope: \"col\"\n      }, \"Product\"), __jsx(\"th\", {\n        scope: \"col\"\n      }, \"Name\"), __jsx(\"th\", {\n        scope: \"col\"\n      }, \"Unit Price\"), __jsx(\"th\", {\n        scope: \"col\"\n      }, \"Quantity\"), __jsx(\"th\", {\n        scope: \"col\"\n      }, \"Total\"))), __jsx(\"tbody\", null, cartItems)));\n    }\n  }]);\n\n  return CartProduct;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.addedItems,\n    total: state.total\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeItem: function removeItem(id) {\n      dispatch(_removeItem(id));\n    },\n    addQuantity: function addQuantity(id) {\n      dispatch(_addQuantity(id));\n    },\n    subtractQuantity: function subtractQuantity(id) {\n      dispatch(_subtractQuantity(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartProduct);","map":null,"metadata":{},"sourceType":"module"}