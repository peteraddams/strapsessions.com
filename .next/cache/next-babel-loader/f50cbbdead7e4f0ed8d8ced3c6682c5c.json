{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport OrderSummary from './OrderSummary';\nimport Payment from '../payments/Payment';\nimport useForm from './userForm';\n\nfunction CheckoutForm(_ref) {\n  var total = _ref.total,\n      shipping = _ref.shipping;\n\n  function handleSubmit() {\n    console.log(\"Form submitted.\");\n  }\n\n  var totalAmount = (total + shipping).toFixed(2);\n  var stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  var validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\"\n      }\n    },\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\"\n      }\n    },\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\"\n      }\n    },\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\"\n      }\n    },\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\"\n      }\n    },\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\"\n      }\n    }\n  };\n\n  var _useForm = useForm(stateSchema, validationStateSchema, handleSubmit),\n      state = _useForm.state,\n      handleOnChange = _useForm.handleOnChange,\n      handleOnSubmit = _useForm.handleOnSubmit,\n      disable = _useForm.disable;\n\n  var errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"user-actions\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-sign-in-alt\"\n  }), __jsx(\"span\", null, \"Returning customer? \", __jsx(Link, {\n    href: \"#\"\n  }, \"Click here to login\"))))), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Country \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"div\", {\n    className: \"select-box\"\n  }, __jsx(\"select\", {\n    className: \"form-control\",\n    name: \"country\"\n  }, __jsx(\"option\", {\n    value: \"5\"\n  }, \"United Arab Emirates\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \"China\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \"United Kingdom\"), __jsx(\"option\", {\n    value: \"0\"\n  }, \"Germany\"), __jsx(\"option\", {\n    value: \"3\"\n  }, \"France\"), __jsx(\"option\", {\n    value: \"4\"\n  }, \"Japan\"))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Company Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\"\n  }))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-check\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"create-an-account\"\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"create-an-account\"\n  }, \"Create an account?\"))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-check\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"ship-different-address\"\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"ship-different-address\"\n  }, \"Ship to a different address?\"))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"textarea\", {\n    name: \"notes\",\n    id: \"notes\",\n    cols: \"30\",\n    rows: \"6\",\n    placeholder: \"Order Notes\",\n    className: \"form-control\"\n  })))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(\"div\", {\n    className: \"payment-method\"\n  }, __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"direct-bank-transfer\",\n    name: \"radio-group\",\n    defaultChecked: true\n  }), __jsx(\"label\", {\n    htmlFor: \"direct-bank-transfer\"\n  }, \"Direct Bank Transfer\"), \"Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.\"), __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"paypal\",\n    name: \"radio-group\"\n  }), __jsx(\"label\", {\n    htmlFor: \"paypal\"\n  }, \"PayPal\")), __jsx(\"p\", null, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"cash-on-delivery\",\n    name: \"radio-group\"\n  }), __jsx(\"label\", {\n    htmlFor: \"cash-on-delivery\"\n  }, \"Cash on Delivery\"))), __jsx(Payment, {\n    amount: totalAmount * 100,\n    disabled: disable\n  })))))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":null,"metadata":{},"sourceType":"module"}