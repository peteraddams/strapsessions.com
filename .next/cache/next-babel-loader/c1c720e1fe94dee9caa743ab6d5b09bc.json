{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nfunction CheckoutForm(_ref) {\n  _s();\n\n  var total = _ref.total,\n      shipping = _ref.shipping;\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    alert(state.firstName.value);\n    return axios.get(\"https://coinbase-backend.herokuapp.com/checkout?total=\".concat(totalAmount, \"&name=\").concat(state.firstName.value)).then(function (res) {\n      console.log(res.data);\n      redirect(res.data);\n    });\n  }\n\n  function redirect(url) {\n    alert(url);\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  var totalAmount = (total + shipping).toFixed(2);\n  var stateSchema = {\n    firstName: {\n      value: \"\",\n      error: \"\"\n    },\n    lastName: {\n      value: \"\",\n      error: \"\"\n    },\n    address: {\n      value: \"\",\n      error: \"\"\n    },\n    city: {\n      value: \"\",\n      error: \"\"\n    },\n    state: {\n      value: \"\",\n      error: \"\"\n    },\n    zip: {\n      value: \"\",\n      error: \"\"\n    },\n    email: {\n      value: \"\",\n      error: \"\"\n    },\n    phone: {\n      value: \"\",\n      error: \"\"\n    }\n  };\n  var validationStateSchema = {\n    firstName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid first name format.\"\n      }\n    },\n    lastName: {\n      required: true,\n      validator: {\n        regEx: /^[a-zA-Z]+$/,\n        error: \"Invalid last name format.\"\n      }\n    },\n    address: {\n      required: true,\n      validator: {\n        error: \"Invalid address format.\"\n      }\n    },\n    city: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    state: {\n      required: true,\n      validator: {\n        error: \"Invalid last name format.\"\n      }\n    },\n    zip: {\n      required: true,\n      validator: {\n        regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n        error: \"Invalid zip format, use like 12345.\"\n      }\n    },\n    email: {\n      required: true,\n      validator: {\n        regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        error: \"Invalid email format.\"\n      }\n    },\n    phone: {\n      required: true,\n      validator: {\n        regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n        error: \"Invalid phone number format use like +2923432432432.\"\n      }\n    }\n  };\n\n  var _useForm = useForm(stateSchema, validationStateSchema),\n      state = _useForm.state,\n      handleOnChange = _useForm.handleOnChange,\n      disable = _useForm.disable;\n\n  var errorStyle = {\n    color: \"red\",\n    fontSize: \"13px\"\n  };\n  return __jsx(\"section\", {\n    className: \"checkout-area ptb-60\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\"\n  })), __jsx(\"form\", {\n    onSubmit: handleOnSubmit\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"billing-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Billing Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"First Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.firstName.value\n  }), state.firstName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.firstName.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Last Name \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.lastName.value\n  }), state.lastName.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.lastName.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.address.value\n  }), state.address.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.address.error))), __jsx(\"div\", {\n    className: \"col-lg-12 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Town / City \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.city.value\n  }), state.city.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.city.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"State / County \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"state\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.state.value\n  }), state.state.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.state.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Postcode / Zip \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"zip\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.zip.value\n  }), state.zip.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.zip.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Email Address \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.email.value\n  }), state.email.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.email.error))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-6\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", null, \"Phone \", __jsx(\"span\", {\n    className: \"required\"\n  }, \"*\")), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"form-control\",\n    onChange: handleOnChange,\n    value: state.phone.value\n  }), state.phone.error && __jsx(\"p\", {\n    style: errorStyle\n  }, state.phone.error)))))), __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12\"\n  }, __jsx(\"div\", {\n    className: \"order-details\"\n  }, __jsx(\"h3\", {\n    className: \"title\"\n  }, \"Your Order\"), __jsx(OrderSummary, null), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: disable\n  }, \"Submit\")))))));\n}\n\n_s(CheckoutForm, \"trinq64LqzZ820N+TM+ZXQneoqU=\", false, function () {\n  return [useForm];\n});\n\n_c = CheckoutForm;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/HP eliteworkstation/Desktop/lambo/novine-react/components/checkout/CheckoutForm.js"],"names":["React","axios","Link","connect","OrderSummary","Payment","useForm","CoinbaseCommerceButton","CheckoutForm","total","shipping","handleOnSubmit","e","preventDefault","alert","state","firstName","value","get","totalAmount","then","res","console","log","data","redirect","url","window","open","toFixed","stateSchema","error","lastName","address","city","zip","email","phone","validationStateSchema","required","validator","regEx","handleOnChange","disable","errorStyle","color","fontSize","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport OrderSummary from \"./OrderSummary\";\nimport Payment from \"../payments/Payment\";\nimport useForm from \"./userForm\";\nimport CoinbaseCommerceButton from \"react-coinbase-commerce\";\n\nfunction CheckoutForm({ total, shipping }) {\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    alert(state.firstName.value);\n    return axios\n      .get(\n        `https://coinbase-backend.herokuapp.com/checkout?total=${totalAmount}&name=${state.firstName.value}`\n      )\n      .then((res) => {\n        console.log(res.data);\n        redirect(res.data);\n      });\n  }\n\n  function redirect(url) {\n    alert(url);\n    if (url) return window.open(url, \"_blank\");\n  }\n\n  let totalAmount = (total + shipping).toFixed(2);\n\n\n    \n  const stateSchema = {\n      firstName: {value: \"\", error: \"\"},\n      lastName: {value: \"\", error: \"\"},\n      address: {value: \"\", error: \"\"},\n      city: {value: \"\", error: \"\"},\n      state: {value: \"\", error: \"\"},\n      zip: {value: \"\", error: \"\"},\n      email: {value: \"\", error: \"\"},\n      phone: {value: \"\", error: \"\"}\n  };\n\n  const validationStateSchema = {\n      firstName: {\n          required: true,\n          validator: {\n          regEx: /^[a-zA-Z]+$/,\n          error: \"Invalid first name format.\"\n          }\n      },\n\n      lastName: {\n          required: true,\n          validator: {\n          regEx: /^[a-zA-Z]+$/,\n          error: \"Invalid last name format.\"\n          }\n      },\n\n      address: {\n          required: true,\n          validator: {\n              error: \"Invalid address format.\"\n          }\n      },\n\n      city: {\n          required: true,\n          validator: {\n              error: \"Invalid last name format.\"\n          }\n      },\n\n      state: {\n          required: true,\n          validator: {\n              error: \"Invalid last name format.\"\n          }\n      },\n\n      zip: {\n          required: true,\n          validator: {\n              regEx: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n              error: \"Invalid zip format, use like 12345.\"\n          }\n      },\n\n      email: {\n          required: true,\n          validator: {\n              regEx: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              error: \"Invalid email format.\"\n          }\n      },\n\n      phone: {\n          required: true,\n          validator: {\n              regEx: /^\\+[0-9]?()[0-9](\\s|\\S)(\\d[0-9]{9})$/,\n              error: \"Invalid phone number format use like +2923432432432.\"\n          }\n      }\n  };\n\n  const { state, handleOnChange, disable } = useForm (\n      stateSchema,\n      validationStateSchema,\n     \n  );\n  \n  const errorStyle = {\n      color: \"red\",\n      fontSize: \"13px\"\n  };\n\n  return (\n    <section className=\"checkout-area ptb-60\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\"></div>\n        </div>\n\n        <form onSubmit={handleOnSubmit}>\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"billing-details\">\n                <h3 className=\"title\">Billing Details</h3>\n\n                <div className=\"row\">\n                 \n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        First Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.firstName.value}\n                      />\n                      {state.firstName.error && (\n                        <p style={errorStyle}>{state.firstName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Last Name <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.lastName.value}\n                      />\n                      {state.lastName.error && (\n                        <p style={errorStyle}>{state.lastName.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.address.value}\n                      />\n                      {state.address.error && (\n                        <p style={errorStyle}>{state.address.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Town / City <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.city.value}\n                      />\n                      {state.city.error && (\n                        <p style={errorStyle}>{state.city.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        State / County <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.state.value}\n                      />\n                      {state.state.error && (\n                        <p style={errorStyle}>{state.state.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Postcode / Zip <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.zip.value}\n                      />\n                      {state.zip.error && (\n                        <p style={errorStyle}>{state.zip.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Email Address <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.email.value}\n                      />\n                      {state.email.error && (\n                        <p style={errorStyle}>{state.email.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>\n                        Phone <span className=\"required\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"form-control\"\n                        onChange={handleOnChange}\n                        value={state.phone.value}\n                      />\n                      {state.phone.error && (\n                        <p style={errorStyle}>{state.phone.error}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  \n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 col-md-12\">\n              <div className=\"order-details\">\n                <h3 className=\"title\">Your Order</h3>\n\n                <OrderSummary />\n\n            \n                <button type=\"submit\" disabled={disable}>Submit</button>\n               \n              </div>\n            </div>\n          </div>\n          \n\n          \n        </form>\n\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    total: state.total,\n    shipping: state.shipping,\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}